// price(number), cash(number), cid(nested list)
// -> object with two properties status, change
// status1 -> 'INSUFFICIENT_FUNDS' no exact change
// status2 -> 'closed' everything is ok but the cid is empty now
// status3 -> 'OPEN' everything is ok and still there is money
function checkCashRegister(price, cash, cid) {
  let cid_cache = [...cid];
  cid = cid.reverse();
  let change = cash - price;
  let change_arr = [];
  let sufficient_funds = false; 
  let currency_counter = 0;
  let stat;
  let currency = {
    'PENNY': 0.01,
    'NICKEL':0.05,
    'DIME':0.1,
    'QUARTER':0.25,
    'ONE': 1,
    'FIVE': 5.0,
    'TEN': 10.0,
    'TWENTY': 20.0,
    'ONE HUNDRED': 100.0

  }

  // create the change array
  // HOW we loop on the cid from highest to lowest and we subtract  if the currency is higher than the change from the change and we loop at the same currency until cid is empty from it or the subtraction is negative and do the same for all the currency until we finish the cid array or we have the change of 0 which means we have the change array
for(let i = 0;i < cid.length;i++){
  while((change - currency[cid[i][0]]).toFixed(2) >= 0 && cid[i][1] != 0){
    // register what have changed
    console.log(change);
    change = (change - currency[cid[i][0]]).toFixed(2);
    cid[i] = [cid[i][0], cid[i][1] - currency[cid[i][0]]];
    currency_counter += 1;


  }
  if (currency_counter > 0){
   
    change_arr.push([cid[i][0], currency[cid[i][0]] * currency_counter]);
    currency_counter = 0;
  }
  if(change == 0){
    sufficient_funds = true;
    break;
  }
}

  // detect the status
  if(sufficient_funds == false){
    stat = "INSUFFICIENT_FUNDS";
    change_arr = [];
  }else{
    for(let i = 0;i < cid.length;i++){
      if(cid[i][1] > 0){
        stat = "OPEN";
      }
    }
    if(stat == undefined){
      stat = "CLOSED";
      change_arr = cid_cache;
      console.log('done')
    }

  }
  
  console.log({status:stat, change: change_arr})
  return {status:stat, change: change_arr}
}

checkCashRegister(19.5, 20, [["PENNY", 0.5], ["NICKEL", 0], ["DIME", 0], ["QUARTER", 0], ["ONE", 0], ["FIVE", 0], ["TEN", 0], ["TWENTY", 0], ["ONE HUNDRED", 0]]);
